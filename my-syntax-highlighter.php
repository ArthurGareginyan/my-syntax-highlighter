<?php
/**
 * Plugin Name: My Syntax Highlighter
 * Plugin URI: http://mycyberuniverse.com/my_programs/wp-plugin-my-syntax-highlighter.html
 * Description: EASILY and SAFELY add your own functions, snippets or any custom codes directly out of your WordPress Dashboard without need of an external editor.
 * Author: Arthur "Berserkr" Gareginyan
 * Author URI: http://www.arthurgareginyan.com
 * Version: 0.2
 * License: GPL3
 * Text Domain: mshighlighter
 * Domain Path: /languages/
 *
 * Copyright 2014-2015  Arthur "Berserkr" Gareginyan  (email : arthurgareginyan@gmail.com)
 *
 * This file is part of "My Syntax Highlighter".
 *
 * "My Syntax Highlighter" is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * "My Syntax Highlighter" is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with "My Syntax Highlighter".  If not, see <http://www.gnu.org/licenses/>.
 *
 */

/**
 * Prevent Direct Access
 */
defined('ABSPATH') or die("Restricted access!");

/**
 * Register text domain
 *
 * @since 0.1
 */
function mshighlighter_textdomain() {
	load_plugin_textdomain( 'mshighlighter', false, dirname( plugin_basename( __FILE__ ) ) . '/languages/' );
}
add_action( 'init', 'mshighlighter_textdomain' );

/**
 * Print direct link to My Syntax Highlighter admin page
 *
 * Fetches array of links generated by WP Plugin admin page ( Deactivate | Edit )
 * and inserts a link to the My Syntax Highlighter admin page
 *
 * @since  0.1
 * @param  array $links Array of links generated by WP in Plugin Admin page.
 * @return array        Array of links to be output on Plugin Admin page.
 */
function mshighlighter_settings_link( $links ) {
	$settings_page = '<a href="' . admin_url( 'options-general.php?page=my-syntax-highlighter.php' ) .'">' . __( 'Settings', 'mshighlighter' ) . '</a>';
	array_unshift( $links, $settings_page );
	return $links;
}
$plugin = plugin_basename( __FILE__ );
add_filter( "plugin_action_links_$plugin", 'mshighlighter_settings_link' );

/**
 * Register "Syntax Highlighter" submenu in "Settings" Admin Menu
 *
 * @since 0.1
 */
function mshighlighter_register_submenu_page() {
	add_options_page( __( 'My Syntax Highlighter', 'mshighlighter' ), __( 'Syntax Highlighter', 'mshighlighter' ), 'manage_options', basename( __FILE__ ), 'mshighlighter_render_submenu_page' );
}
add_action( 'admin_menu', 'mshighlighter_register_submenu_page' );

/**
 * Attach Settings Page
 *
 * @since 0.1
 */
require_once( plugin_dir_path( __FILE__ ) . 'inc/settings_page.php' );

/**
 * Register settings
 *
 * @since 0.1
 */
function mshighlighter_register_settings() {
	register_setting( 'mshighlighter_settings_group', 'mshighlighter_settings' );
}
add_action( 'admin_init', 'mshighlighter_register_settings' );

/**
 * Enqueue the CodeMirror scripts and the style sheet for setting's page
 *
 * @since 0.1
 */
function mshighlighter_enqueue_settings_page_scripts($hook) {

    // Return if the page is not a settings page of this plugin
    if ( 'settings_page_my-syntax-highlighter' != $hook ) {
        return;
    }

    // Style sheet
    wp_enqueue_style('styles', plugin_dir_url(__FILE__) . 'inc/style-admin.css');

    // CodeMirror
    wp_enqueue_script('codemirror', plugin_dir_url(__FILE__) . 'inc/codemirror/codemirror-compressed.js');
    wp_enqueue_style('codemirror_style', plugin_dir_url(__FILE__) . 'inc/codemirror/codemirror.css');
    wp_enqueue_script('codemirror-setting', plugin_dir_url(__FILE__) . 'inc/editor.js', array(), false, true);

}
add_action( 'admin_enqueue_scripts', 'mshighlighter_enqueue_settings_page_scripts' );

/**
 * Enqueue the CodeMirror scripts on front pages
 *
 * @since 0.1
 */
function mshighlighter_enqueue_codemirror_scripts($hook) {

    // Style sheet
    wp_enqueue_style('styles', plugin_dir_url(__FILE__) . 'inc/style-front.css');

    // CodeMirror
    wp_enqueue_script('codemirror', plugin_dir_url(__FILE__) . 'inc/codemirror/codemirror-compressed.js');
    wp_enqueue_style('codemirror_style', plugin_dir_url(__FILE__) . 'inc/codemirror/codemirror.css');
    wp_enqueue_script('codemirror-setting', plugin_dir_url(__FILE__) . 'inc/editor.js', array(), false, true);
}
add_action( 'wp_enqueue_scripts', 'mshighlighter_enqueue_codemirror_scripts' );

/**
 * Create the shortcode for CodeMirror editor
 *
 * @since 0.1
 */
function mshighlighter_shortcode( $atts, $content = null ) {

    // Strip whitespace from the beginning and end of a string
    $content = trim($content);

    return '<textarea
                id="mshighlighter"
                name="mshighlighter"
            >'
            . $content .
            '</textarea>';
}
add_shortcode( 'code', 'mshighlighter_shortcode' );

/**
 * Delete options on uninstall
 *
 * @since 0.1
 */
function mshighlighter_uninstall() {
	delete_option( 'mshighlighter_settings' );
}
register_uninstall_hook( __FILE__, 'mshighlighter_uninstall' );

/* That's all folks! */
?>
